{"version":3,"sources":["components/Editor.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","onClick","prevOpen","TransitEnterexitSharp","Launch","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","state","setState","useEffect","timeout","setTimeout","clearTimeout","title","sandbox","frameborder","width","height","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06161c02.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\nimport { Launch, TransitEnterexitSharp } from \"@material-ui/icons\";\r\n\r\nconst Editor = (props) => {\r\n    const { language, displayName, value, onChange } = props;\r\n    const [open, setOpen] = useState(true);\r\n\r\n    function handleChange(editor, data, value) {\r\n        onChange(value);\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button\r\n                    onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n                    className=\"expand-collapse-btn\"\r\n                >\r\n                    {open ? <TransitEnterexitSharp /> : <Launch />}\r\n                </button>\r\n            </div>\r\n            <ControlledEditor\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    theme: \"material\",\r\n                    lineNumbers: true,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Editor;\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\nimport Editor from \"./components/Editor\";\n\nconst App = () => {\n  const [html, setHtml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n  const [js, setJs] = useState(\"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n  const [state, setState] = useState(1);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n       <html>\n       <body>${html}</body>\n       <style>${css}</style>\n       <script>${js}</script>\n       </html>`);\n    }, 250);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [html, css, js]);\n  return (\n    <>\n      <h1>Code Editor for HTML, CSS & JavaScript</h1>\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <ul>\n            <li>\n              File Explorer\n            </li>\n            <li>\n              <div className=\"btn1\">\n                <button className=\"btn1\" onClick={() => setState(1)}>index.html</button>\n              </div>\n            </li>\n            <li>\n              <div className=\"btn1\">\n                <button onClick={() => setState(2)}>index.css</button>\n              </div>\n            </li>\n            <li>\n              <div className=\"btn1\">\n                <button onClick={() => setState(3)}>index.js</button>\n              </div>\n            </li>\n          </ul>\n        </header>\n      </div>\n\n\n      <div className=\"top-panel\">\n\n        {state === 0 &&\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <Editor\n                  language=\"xml\"\n                  displayName=\"HTML\"\n                  value={html}\n                  onChange={setHtml}\n                />\n              </div>\n              <div className=\"col\">\n                <Editor\n                  language=\"css\"\n                  displayName=\"CSS\"\n                  value={css}\n                  onChange={setCss}\n                />\n              </div>\n              <div className=\"col\">\n                <Editor\n                  language=\"javascript\"\n                  displayName=\"JS\"\n                  value={js}\n                  onChange={setJs}\n                />\n              </div>\n            </div>\n            <div className=\"clearfix\">\n            </div>\n          </div>\n\n        }\n        {state === 1 &&\n          <div>\n            <Editor\n              language=\"xml\"\n              displayName=\"Index.html\"\n              value={html}\n              onChange={setHtml}\n            />\n          </div>\n        }\n        {state === 2 &&\n          <div>\n            <Editor\n              language=\"css\"\n              displayName=\"Index.css\"\n              value={css}\n              onChange={setCss}\n            />\n          </div>\n        }\n        {state === 3 &&\n          <div>\n            <Editor\n              language=\"javascript\"\n              displayName=\"Index.js\"\n              value={js}\n              onChange={setJs}\n            />\n          </div>\n        }\n      </div>\n      <div className=\"pane\">\n        <h1>Live Output View:</h1>\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameborder=\"1\"\n          width=\"70%\"\n          height=\"70%\"\n          margin=\"50px\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}